[tool.poetry]
name = "iot-attendance"
version = "0.1.0"
description = ""
authors = ["Hung-Cheng-Xi <11146062@ntub.edu.tw>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.7"
fastapi = { extras = ["standard"], version = "^0.115.6" }
sqlmodel = "^0.0.22"
pydantic-settings = "^2.7.0"
alembic = "^1.14.0"
asyncpg = "^0.30.0"
greenlet = "^3.1.1"
uvicorn = "^0.33.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.8.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79
fix = true

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501"]


[tool.ruff.format]
quote-style = "single"
indent-style = "tab"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
